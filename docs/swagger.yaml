definitions:
  model.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      msg:
        type: string
    type: object
  model.TokenData:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user: {}
    type: object
info:
  contact: {}
paths:
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: 用于用户登陆，接受用户名和用户密码，将 access token 和 refresh token 作为结果返回，同时返回用户的账户信息
      parameters:
      - description: 用户名
        in: formData
        name: username
        required: true
        type: string
      - description: 用户密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TokenData'
        "400":
          description: 输入参数错误
        "500":
          description: 服务错误
      summary: 用户登陆接口
      tags:
      - 用户相关接口
  /api/v1/user/password:
    post:
      consumes:
      - application/json
      description: 用于用户更新密码，需要新密码做为传入的参数，需要 token 验证
      parameters:
      - description: 新密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: 输入参数错误
        "500":
          description: 服务错误
      summary: 用户重新设置密码接口
      tags:
      - 用户相关接口
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: 用于注册新用户，传入 username 和 password 作为新用户的 username 和 password
      parameters:
      - description: 用户名
        in: formData
        name: username
        required: true
        type: string
      - description: 用户密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: 输入参数错误
        "500":
          description: 服务错误
      summary: 用户注册接口
      tags:
      - 用户相关接口
  /chat/:receiver:
    get:
      consumes:
      - application/json
      description: A chat room connect by websocket
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: chat room api
      tags:
      - user
  /group:
    post:
      consumes:
      - application/json
      description: set up a group
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: create group
      tags:
      - user
  /group/member:
    put:
      consumes:
      - application/json
      description: invite group members
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: invite member
      tags:
      - user
  /user/info:
    get:
      consumes:
      - application/json
      description: get user account info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get User Info
      tags:
      - user
    post:
      consumes:
      - application/json
      description: update user account info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update User Info
      tags:
      - user
  /user/online:
    get:
      consumes:
      - application/json
      description: get user is online or not
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get User online
      tags:
      - user
swagger: "2.0"
